{"version":3,"file":"static/js/985.5a2f65e1.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","redux/Contact/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const PhoneTitle = styled.h1`\n    text-align: center;\n    font-family: Segoe UI;\n    font-weight: 700;\n    font-size: 48px;\n`;\n\nexport const Loader = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\n\nexport const MessageUser = styled.p`\n    text-align: center;\n    font-family: Segoe UI;\n    font-weight: 500;\n    font-size: 36px;\n    color: orangered;\n`;\n\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    border: 2px solid gray;\n    border-radius: 5px;\n    padding: 10px;\n`; \n\nexport const Button = styled.button`\n    font-size: 24px;\n    font-weight: 700;\n    font-family: Cambria;\n    padding: 16px;\n    margin-bottom: 16px;\n    color: orangered;\n    background-color: white; \n    border: 1px solid;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1), background-color 250ms cubic-bezier(0.4, 0, 0.2, 1), border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        color: white;\n        background-color: orangered;\n        border-color: none;\n    }\n`;\n\nexport const LabelForm = styled.label`\n    font-family: Cambria;\n    font-weight: 700;\n    font-size: 24px;\n    color: #5e5e5e;\n`; \n\nexport const InputForm = styled.input`\n    font-family: Cambria;\n    font-weight: 400;\n    font-size: 24px;\n    outline: none;\n    border: 2px solid gray;\n    border-radius: 5px;\n    &:focus{\n    border: 3px solid gray;\n}\n`; \n\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getFilterValue = state => state.filter;\nexport const getContactsValue = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const getAllContacts = createSelector([getContactsValue, getFilterValue], (contacts, filter) => {\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n});\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport { Form, Button, InputForm, LabelForm } from './ContactForm.styled';\nimport { addContact } from '../../redux/Contact/operations';\nimport { getContactsValue } from 'redux/Contact/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contacts = useSelector(getContactsValue);\n\n    const dispatch = useDispatch();\n    const id = shortid.generate();\n\n    const createContact = ({ name, number }) => ({\n        id: id,\n        name,\n        number,\n    });\n\n    const addContactToState = contact => dispatch(addContact(contact)); \n\n    const handleInputChange = e => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) { \n            case 'name':\n                setName(value);\n                break;\n            \n            case 'number':\n                setNumber(value);\n                break;\n            \n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const userName = contacts.find(user => user.name.toLocaleLowerCase() === name.toLowerCase());\n    if (userName) {\n      alert(`${name} is already in contacs`);\n    } else {\n      addContactToState(createContact({ name, number }));\n      reset();\n    }\n  };\n\n    const reset = () => {\n        setName('');\n        setNumber('')\n    };\n\n        return (\n            <Form onSubmit={handleSubmit}>\n                <LabelForm> Name </LabelForm>\n                <InputForm\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={handleInputChange}\n                />\n\n                <LabelForm> Number </LabelForm>\n                \n                <InputForm\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    onChange={handleInputChange}\n                />\n                <Button type=\"submit\"> Add contact </Button>\n            </Form>\n        );\n};\n","import styled from \"styled-components\";\n\nexport const LabelFilter = styled.label`\n    font-family: Cambria;\n    font-weight: 700;\n    font-size: 24px;\n\n    margin-right: 10px;\n`; \n\nexport const InputFilter = styled.input`\n    font-family: Cambria;\n    font-weight: 400;\n    font-size: 24px;\n    outline: none;\n    border: 2px solid gray;\n    border-radius: 5px;\n    &:focus {\n    border: 3px solid gray;\n}\n`; \n","import { LabelFilter, InputFilter } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from 'redux/Contact/selectors';\nimport { setFilter } from 'redux/Contact/filterSlice';\n\nexport const Filter = () => {\n    const filterValue = useSelector(getFilterValue)\n    const dispatch = useDispatch();\n    \n  return (\n    <div>\n        <LabelFilter >Find contacts by name</LabelFilter>\n\n        <InputFilter\n              type=\"text\"\n              value={filterValue}\n              name=\"filter\"\n              onChange={(e) => dispatch(setFilter(e.target.value))}\n        />\n    </div>\n        );\n};\n\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`; \n\nexport const Item = styled.li`\n    font-family: Cambria;\n    font-weight: 500;\n    font-size: 24px;\n\n    display: flex;\n    justify-content:space-between;\n`; \n\nexport const Button = styled.button`\n    cursor: pointer;\n    border-radius: 5px;\n    border: 2px solid gray;\n\n    padding: 5px;\n\n    text-align: center;\n    font-family: Cambria;\n    font-weight: 700;\n    font-size: 24px;\n    &:active, \n    &:hover,\n    &:focus {\n        background-color: orangered;\n        color: white;\n        border-color: none;\n}`; \n\n","import { List, Item, Button } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/Contact/operations';\nimport { getAllContacts } from 'redux/Contact/selectors';\n\nexport const ContactList = () => {\n    const contacts = useSelector(getAllContacts);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <List >\n                {contacts.map(({ name, id, number }) => {\n                    return (\n                        <Item\n                            key={id}>\n                            {name} : {number}\n                            <Button\n                                type=\"button\"\n                                onClick={() => dispatch(deleteContact(id))}\n                            >\n                                Delete\n                            </Button>\n                        </Item>\n                    );\n                })}\n            </List>\n        </>\n    );\n};\n","import { PhoneTitle, Loader, MessageUser } from './Contacts.styled';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { fetchContacts } from \"../../redux/Contact/operations\";\nimport { getAllContacts, selectError, selectIsLoading } from '../../redux/Contact/selectors';\n\n\nexport default function Contacts() {\n  const contacts = useSelector(getAllContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101'\n      }}\n    >\n      <div>\n        <PhoneTitle>Phonebook</PhoneTitle>\n        <ContactForm />\n        <PhoneTitle>Contacts</PhoneTitle>\n        <Filter />\n        {isLoading&&!error?<Loader><ThreeDots /></Loader>:<ContactList />}\n        {!contacts.length && <MessageUser>There are no contacts in the Phonebook</MessageUser>}\n      </div>\n    </div>\n  );\n};\n"],"names":["PhoneTitle","styled","h1","_templateObject","_taggedTemplateLiteral","Loader","div","_templateObject2","MessageUser","p","_templateObject3","Form","form","Button","button","LabelForm","label","InputForm","input","_templateObject4","getFilterValue","state","filter","getContactsValue","contacts","items","selectIsLoading","isLoading","selectError","error","getAllContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","setName","useState","number","setNumber","useSelector","dispatch","useDispatch","id","shortid","handleInputChange","e","value","currentTarget","reset","_jsxs","onSubmit","preventDefault","find","user","toLocaleLowerCase","alert","concat","_ref","createContact","addContact","children","_jsx","type","pattern","title","required","onChange","LabelFilter","InputFilter","Filter","filterValue","setFilter","target","List","ul","Item","li","ContactList","_Fragment","map","onClick","deleteContact","Contacts","useEffect","fetchContacts","style","display","justifyContent","alignItems","fontSize","color","ThreeDots","length"],"sourceRoot":""}